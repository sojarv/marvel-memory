{"version":3,"sources":["components/Card.jsx","MarvelLogo.svg","components/Header.jsx","data.js","components/Endgame.jsx","components/Footer.jsx","App.js","index.js"],"names":["Card","props","className","onClick","e","el","target","tagName","parentElement","id","childData","src","image","alt","name","Header","logo","Heroes","Endgame","workPlease","isNew","end","Footer","href","title","App","useState","heroes","setHeroes","score","setScore","showedHeroes","setShowedHeroes","won","setWon","game","setNew","useEffect","shuffleArray","clearElementForNewGame","newHeroes","map","hero","selected","getData","heroId","Number","find","newGame","filtredfromtrue","filter","findFirst","undefined","endGame","others","toShow","array","i","length","j","Math","floor","random","temp","getNew","description","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ac7ac70.chunk.js","sourcesContent":["const Card = (props) => {\r\n  //Passes data back to parent (which element was selected)\r\n  const workYourMagic = (e) => {\r\n    var el = e.target;\r\n    if (e.target.tagName !== 'div') {\r\n      el = e.target.parentElement;\r\n    }\r\n\r\n    if (el.id !== '') {\r\n      props.childData(el.id);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"card\" onClick={workYourMagic} id={props.id}>\r\n      <img src={props.image} alt={'Picture of ' + props.name + ' not found'} />\r\n      <p>{props.name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","export default __webpack_public_path__ + \"static/media/MarvelLogo.ce377fd3.svg\";","import logo from '../MarvelLogo.svg';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div id=\"header\">\r\n      <img id=\"logo\" src={logo} alt=\"Here should be a Marvel logo\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const Heroes = [{\r\n        \"id\": 1009282,\r\n        \"name\": \"Doctor Strange\",\r\n        \"description\": \"\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/5/f0/5261a85a501fe/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009718,\r\n        \"name\": \"Wolverine\",\r\n        \"description\": \"Born with super-human senses and the power to heal from almost any wound, Wolverine was captured by a secret Canadian organization and given an unbreakable skeleton and claws. Treated like an animal, it took years for him to control himself. Now, he's a premiere member of both the X-Men and the Avengers.\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/2/60/537bcaef0f6cf/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009257,\r\n        \"name\": \"Cyclops\",\r\n        \"description\": \"\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/6/70/526547e2d90ad/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009629,\r\n        \"name\": \"Storm\",\r\n        \"description\": \"Ororo Monroe is the descendant of an ancient line of African priestesses, all of whom have white hair, blue eyes, and the potential to wield magic.\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/6/40/526963dad214d/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n\r\n    {\r\n        \"id\": 1010365,\r\n        \"name\": \"Nebula\",\r\n        \"description\": \"\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/e/30/528d339973337/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n\r\n    {\r\n        \"id\": 1009471,\r\n        \"name\": \"Nick Fury\",\r\n        \"description\": \"\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/3/c0/5261a745e658d/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n\r\n    {\r\n        \"id\": 1009187,\r\n        \"name\": \"Black Panther\",\r\n        \"description\": \"\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/6/60/5261a80a67e7d/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1010735,\r\n        \"name\": \"Drax\",\r\n        \"description\": \"\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/e/d0/526032deabbff/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1010744,\r\n        \"name\": \"Rocket Raccoon\",\r\n        \"description\": \"A genetically-engineered alien with a knack for big guns and fast ships, Rocket serves as the backbone of the Guardians of the Galaxy!\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/9/b0/50fec1e49298a/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1010743,\r\n        \"name\": \"Groot\",\r\n        \"description\": \"\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/3/10/526033c8b474a/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009480,\r\n        \"name\": \"Odin\",\r\n        \"description\": \"\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/3/00/539a06a64b262/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009220,\r\n        \"name\": \"Captain America\",\r\n        \"description\": \"Vowing to serve his country any way he could, young Steve Rogers took the super soldier serum to become America's one-man army. Fighting for the red, white and blue for over 60 years, Captain America is the living, breathing symbol of freedom and liberty.\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/3/50/537ba56d31087/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1010763,\r\n        \"name\": \"Gamora\",\r\n        \"description\": \"\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/5/90/526032a2cce62/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009610,\r\n        \"name\": \"Spider-Man\",\r\n        \"description\": \"Bitten by a radioactive spider, high school student Peter Parker gained the speed, strength and powers of a spider. Adopting the name Spider-Man, Peter hoped to start a career using his new abilities. Taught that with great power comes great responsibility, Spidey has vowed to use his powers to help people.\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/3/50/526548a343e4b/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009697,\r\n        \"name\": \"Vision\",\r\n        \"description\": \"The metal monstrosity called Ultron created the synthetic humanoid known as the Vision from the remains of the original android Human Torch of the 1940s to serve as a vehicle of vengeance against the Avengers.\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/9/d0/5111527040594/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009368,\r\n        \"name\": \"Iron Man\",\r\n        \"description\": \"Wounded, captured and forced to build a weapon by his enemies, billionaire industrialist Tony Stark instead created an advanced suit of armor to save his life and escape captivity. Now with a new outlook on life, Tony uses his money and intelligence to make the world a safer, better place as Iron Man.\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/9/c0/527bb7b37ff55/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009351,\r\n        \"name\": \"Hulk\",\r\n        \"description\": \"Caught in a gamma bomb explosion while trying to save the life of a teenager, Dr. Bruce Banner was transformed into the incredibly powerful creature called the Hulk. An all too often misunderstood hero, the angrier the Hulk gets, the stronger the Hulk gets.\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/5/a0/538615ca33ab0/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009664,\r\n        \"name\": \"Thor\",\r\n        \"description\": \"As the Norse God of thunder and lightning, Thor wields one of the greatest weapons ever made, the enchanted hammer Mjolnir. While others have described Thor as an over-muscled, oafish imbecile, he's quite smart and compassionate.  He's self-assured, and he would never, ever stop fighting for a worthwhile cause.\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/d/d0/5269657a74350/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009652,\r\n        \"name\": \"Thanos\",\r\n        \"description\": \"The Mad Titan Thanos, a melancholy, brooding individual, consumed with the concept of death, sought out personal power and increased strength, endowing himself with cybernetic implants until he became more powerful than any of his brethren.\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/6/40/5274137e3e2cd/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009407,\r\n        \"name\": \"Loki\",\r\n        \"description\": \"\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/d/90/526547f509313/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009562,\r\n        \"name\": \"Scarlet Witch\",\r\n        \"description\": \"\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/6/70/5261a7d7c394b/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009417,\r\n        \"name\": \"Magneto\",\r\n        \"description\": \"\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/3/b0/5261a7e53f827/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009504,\r\n        \"name\": \"Professor X\",\r\n        \"description\": \"\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/3/e0/528d3378de525/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009189,\r\n        \"name\": \"Black Widow\",\r\n        \"description\": \"\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/f/30/50fecad1f395b/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009338,\r\n        \"name\": \"Hawkeye\",\r\n        \"description\": \"\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/e/90/50fecaf4f101b/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009297,\r\n        \"name\": \"Falcon\",\r\n        \"description\": \"With a mental connection to all birds and a suit that gives him wings to fly, The Falcon has been both the partner to Captain America and an Avenger himself. Whether as a super hero or in his secret identity of social worker Sam Wilson, The Falcon dedicates his life to standing up for others.\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/f/b0/5111505fb7009/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    },\r\n    {\r\n        \"id\": 1009211,\r\n        \"name\": \"Bucky\",\r\n        \"description\": \"\",\r\n        \"image\": \"http://i.annihil.us/u/prod/marvel/i/mg/d/03/4dc8478464008/portrait_fantastic.jpg\",\r\n        \"selected\": false\r\n    }\r\n]","const Endgame = (props) => {\r\n  // Passes data back to parent\r\n  const workPlease = (e) => {\r\n    props.isNew(false);\r\n  };\r\n\r\n  return props.end ? (\r\n    <div className=\"end\">\r\n      <p>You found every superhero there is!</p>\r\n      <button onClick={workPlease}>Start again</button>\r\n    </div>\r\n  ) : (\r\n    <div className=\"end\">\r\n      <p>You lost</p>\r\n      <button onClick={workPlease}>Start again</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Endgame;\r\n","const Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div id=\"footerData\">\r\n        <p>Data provided by Marvel. © 2021 Marvel</p>\r\n        <a href=\"https://developer.marvel.com/\">Developer sites </a>\r\n        <div>\r\n          Icons made by{' '}\r\n          <a\r\n            href=\"https://www.flaticon.com/authors/pixel-perfect\"\r\n            title=\"Pixel perfect\"\r\n          >\r\n            Pixel perfect\r\n          </a>{' '}\r\n          from{' '}\r\n          <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n            www.flaticon.com\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import './App.scss';\nimport { useEffect, useState } from 'react';\nimport Card from './components/Card';\nimport Header from './components/Header';\nimport { Heroes } from './data';\nimport Endgame from './components/Endgame';\nimport md5 from 'md5';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [heroes, setHeroes] = useState([]);\n  const [score, setScore] = useState(0);\n  const [showedHeroes, setShowedHeroes] = useState([]);\n  const [won, setWon] = useState(false);\n  const [game, setNew] = useState(false);\n\n  useEffect(() => {\n    // Setup for fetching elements from Marvel developer sites\n    const baseUrl = 'https://gateway.marvel.com:443/v1/public/characters?name=';\n\n    /**\n     * public key, private key\n     const ts = 1;\n     const stringToHash = ts + privateKey + publicKey;\n     const hash = md5(stringToHash);\n     const ending = '&ts=' + ts + '&apikey=' + publicKey + '&hash=' + hash;\n     const url = baseUrl;\n     \n     */\n    // names from all heroes used\n    const names = [\n      'Doctor Strange',\n      'WOLVERINE',\n      'Cyclops',\n      'Storm',\n      'Nebula',\n      'Star-Lord (Peter Quill)',\n      'Nick Fury',\n      'Captain Marvel (Carol Danvers)',\n      'Ant-Man (Scott Lang)',\n      'BLACK PANTHER',\n      'Drax',\n      'Rocket Raccoon',\n      'Groot',\n      'Odin',\n      'Captain America',\n      'Gamora',\n      'Spider-man',\n      'Vision',\n      'Iron man',\n      'Hulk',\n      'Thor',\n      'Thanos',\n      'Loki',\n      'SCARLET WITCH',\n      'Magneto',\n      'Professor X',\n      'Black widow',\n      'Hawkeye',\n      'Falcon',\n      'Bucky',\n    ];\n\n    // This is a request, that gives back the data from Marvel Develompent Portal\n\n    /* let requests = names.map((name) => fetch(baseUrl + name + ending));\n\n    Promise.all(requests)\n      .then((responses) => {\n        // all responses are resolved successfully\n        //console.log(responses);\n        return responses;\n      })\n      .then((promises) => Promise.all(promises.map((r) => r.json())))\n      .then((results) => {\n        results.forEach((result) => {\n          console.log(result);\n          setHeroes((prevState) => [\n            ...prevState,\n            {\n              id: result.data.results[0].id,\n              name: result.data.results[0].name,\n              description: result.data.results[0].description,\n              image:\n                result.data.results[0].thumbnail.path + '/standard_xlarge.jpg',\n              selected: false,\n            },\n          ]);\n          console.log(result.data.results[0].name);\n        });\n      }); */\n\n    // Shuffeles them, sets all heroes and first three ones\n    shuffleArray(Heroes);\n    setHeroes(Heroes);\n    setShowedHeroes([Heroes[0], Heroes[1], Heroes[2]]);\n  }, [game]);\n\n  // This function is used every time it starts a new game, that it clears all already selected items\n  const clearElementForNewGame = (newHeroes) => {\n    const cleared = newHeroes.map((hero) => {\n      const updatedHero = {\n        ...hero,\n        selected: false,\n      };\n      return updatedHero;\n    });\n    return cleared;\n  };\n\n  // Function for new game - sets score to 0, it isn't won, new game, clears and sets heroes\n  const newGame = () => {\n    setScore(0);\n    setWon(false);\n    setNew(true);\n    const newHeroes = clearElementForNewGame(heroes);\n    shuffleArray(newHeroes);\n    setHeroes(newHeroes);\n    setShowedHeroes([newHeroes[0], newHeroes[1], newHeroes[2]]);\n  };\n\n  // Find first element in array that wasn't selected yet.\n  const findFirstFalse = (array) => {\n    let el = array.find((hero) => {\n      hero.selected = false;\n      return hero;\n    });\n    return el;\n  };\n\n  // If you win the game it set to this. And clears elements in addition.\n  const endGame = () => {\n    const newHeroes = clearElementForNewGame(heroes);\n    setWon(true);\n    setNew(false);\n    setScore(score + 1);\n    shuffleArray(newHeroes);\n    setHeroes(newHeroes);\n    setShowedHeroes([newHeroes[0], newHeroes[1], newHeroes[2]]);\n  };\n\n  // Gets data from child (Card).\n  const getData = (e) => {\n    let heroId = Number(e);\n    let el = heroes.find((hero) => hero.id === heroId);\n\n    if (el.selected) {\n      // if it is already selected then game over and new game\n      newGame();\n    } else {\n      const newHeroes = heroes.map((hero) => {\n        // else find the element\n        hero.className = '';\n        if (hero.id === heroId) {\n          const updatedHero = {\n            ...hero,\n            selected: !hero.selected, // update state\n          };\n          return updatedHero;\n        }\n        return hero;\n      });\n\n      shuffleArray(newHeroes); // shuffle this new array\n      let filtredfromtrue = newHeroes.filter((hero) => hero.selected !== true); // finds all that weren't selected yet\n\n      let findFirst = findFirstFalse(filtredfromtrue); //find the first one from them.\n\n      if (findFirst === undefined) {\n        // if this is undefined (all are selected already)\n        setShowedHeroes([newHeroes[0], newHeroes[1], newHeroes[2]]);\n        setScore(score + 1);\n        endGame(); // ends game\n      } else {\n        // otherwise get every element other than the one that is alredy seleceted in (findFirst)\n        let others = newHeroes.filter((hero) => hero.id !== findFirst.id);\n        let toShow = [findFirst, others[0], others[1]]; // make them show\n\n        shuffleArray(toShow); // shuffle them, so there is not the same order everytime\n        setHeroes(newHeroes); // sets heroes and ones for show\n        setShowedHeroes(toShow);\n        setScore(score + 1); // increment score\n      }\n    }\n  };\n\n  // Shuffles an array\n  const shuffleArray = (array) => {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  // Gets data from child(Endgame) so it initiate new game\n  const getNew = (e) => {\n    setNew(e);\n    setWon(false);\n    setScore(0);\n  };\n\n  // if you won, then show Endgame with winning\n  // else if you lost show Endgame with losing\n  //      else play memory\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div id=\"score\">Your score is: {score} / 27</div>\n      <div className=\"cardContainer\">\n        {won ? (\n          <div id=\"end\">\n            <Endgame end={won} isNew={getNew} />\n          </div>\n        ) : game ? (\n          <div id=\"end\">\n            <Endgame end={won} isNew={getNew} />\n          </div>\n        ) : (\n          showedHeroes.map((hero) => {\n            return (\n              <Card\n                selected={hero.selected}\n                key={hero.id}\n                id={hero.id}\n                image={hero.image}\n                name={hero.name}\n                description={hero.description}\n                childData={getData}\n              />\n            );\n          })\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}